<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAQ4O
        FAoeES4bIgo3LCYSPDQmEjw0Igo3LB4RLhsODhQKAAAAAQAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUBCAACQIPBSMK
        OCouDUpsMg5QqTQOU880DVPkNA5U6TQOVOk0DVPkNA5TzzIOUKkuDUpsIwo4KgkCDwUUBCAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMEBEAABAAASUP
        OicwDEyKNAxT3TUMVfw1DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVfw0DFPdMAxMiiUP
        OicAEQABDBARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwkrABEM
        GgYuEEhXNA5T0TUMVf41DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf81DFX+NA5T0S4QSFcRDBoGGwkrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMI
        OAAdCS4KMQ9OdjUNVO41DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf81DFX/NQxV/zUMVf81DFX/NQ1U7jEPTnccBi0KIwg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAdDC4AERIZBDIST3M1DFX2NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zQKU/80ClP/NApT/zQK
        U/80ClP/MwlS/zQKU/81DFX/NQxV/zUMVf81DFX/NQxU9jEPT3URExkEHQwuAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFBUbAFgDkQAxEE1SNQ1U7TUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zULVP86FFv/YFOP/3Jx
        qP9ycKf/cnCn/3Jwp/9qYpv/TzZ3/zcPWP80C1T/NQxV/zUMVf81DFX/NQ1U7TEQTVNYA5EAFBUbAAAA
        AAAAAAAAAAAAAAAAAAAxEk0ALRJHIDQOVM01DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQtU/2tk
        nf+ox+3/q8zx/6vM8f+rzPH/q8zx/6rL8P+iveX/dXWq/zsWXf80C1T/NQxV/zUMVf81DFX/NA5UzS0S
        RyAxEk0AAAAAAAAAAAAAAAAAHAYsAAAAAAEyDVCCNQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf84EVn/i5jH/6vM8v+pye//qcnv/6nJ7/+pye//qcnv/6nK8P+pye//cm+m/zYOVv81DFX/NQxV/zUM
        Vf81DFX/Mg1QggAAAAEcBiwAAAAAAAAAAAAyDk8ALw1KITQMVNk1DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf81DFX/NQxV/zUMVf91dav/q8zy/6vM8v+rzPL/q8zy/6vL8f+pye//qcnv/6rK8P+et+H/SSxv/zQK
        U/81DFX/NQxV/zUMVf80DFTZLw1KITEOTwAAAAAAAwIFADoLXgAzD1JgNQxV/DUMVf81DFX/NQxV/zUM
        Vf81DFX/NQxV/zUMVf81DFX/NAtU/0AeY/9yb6b/hpDB/4aQwf+Gj8H/jJrJ/6XD6v+pye//qcnv/6nI
        7/9gU4//MwlS/zUMVf81DFX/NQxV/zUMVfw0D1JgOgteAAMCBQAoIDsAIjcsAjUPVJ81DFX/NQxV/zUM
        Vf81DFX/NQxV/zUMVf81C1T/MwlS/zQMVf81DVb/NQxV/zUMVf83EFj/NxBY/zYPV/9AHmT/kqTR/6rL
        8f+pye//qsvx/2xlnv8zCVP/NQxV/zUMVf81DFX/NQxV/zUPVKAhOCsCKCE7ADUaUAA0GVAPNQ5VyDUM
        Vf81DFX/NQxV/zUMVf81DFX/NApU/z0ZX/9gUo7/eXyw/4CGuP+Ahrj/gIa4/4CGuP+Ahrj/gIW4/4WP
        wP+kwOj/qcrv/6nJ7/+pyvD/ZFmT/zMJUv81DFX/NQxV/zUMVf81DFX/NQ5VyDQaUA80G1EANA9SADMP
        UB41DVXeNQxV/zUMVf81DFX/NQxV/zQLVP9CIWb/hY/A/6jI7v+rzPL/q8zy/6vM8v+rzPL/q8zy/6vM
        8v+rzPL/q8zy/6nJ7/+pye//qsrw/6K95v9ONHb/NApT/zUMVf81DFX/NQxV/zUMVf81DVXfMw9QHjQQ
        UgA3FlcANhZWJDUNVeQ1DFX/NQxV/zUMVf81DFX/NxBY/3yAtP+rzPH/qcnv/6nJ7/+pye//qcnv/6nJ
        7/+pye//qcnv/6nJ7/+pye//qcnv/6nJ7/+rzPL/gYe5/zkSWf81DFX/NQxV/zUMVf81DFX/NQxV/zUN
        VeQ2F1YkNxZXADcWWAA3FlcjNQ1V5DUMVf81DFX/NQxV/zQKU/9QOHj/or7m/6rK8P+pye//qcnv/6vM
        8v+rzPL/q8zy/6vM8v+rzPL/q8zy/6rL8f+rzPL/qsrw/42byv9GKGz/NApU/zUMVf81DFX/NQxV/zUM
        Vf81DFX/NQ1V5DcXVyM3F1gANQ9VADUPVR01DVXeNQxV/zUMVf81DFX/MwlT/2pim/+qy/H/qcnv/6nJ
        7/+kwun/i5nI/4aQwf+GkMH/hpDB/4aQwf+JlMT/jp3M/4SNvv9oYJr/Pxxi/zMJU/81DFX/NQxV/zUM
        Vf81DFX/NQxV/zUMVf81DVXeNQ9VHTUQVQA6GloAOhpaDTYOVsY1DFX/NQxV/zUMVf80ClP/c3Gn/6vM
        8f+pye//qsvx/5Cfzf8+G2H/Nw9X/zcQWP83D1f/NQ1V/zgQWf87FVz/NQ1V/0cpbP9nXpj/RSZq/zQK
        U/81DFX/NQxV/zUMVf81DFX/NQxV/zYOVsY7G1oNOxtaAD8tXgCH/6UANhBXmjUMVf81DFX/NQxV/zMJ
        U/9sZp7/qsvx/6nJ7/+pyvD/o7/m/4SNvv+Ahrj/gIa4/32Ctf9jV5L/PBde/zMIUv9JLXD/kaPQ/63Q
        9f+NnMr/Ridr/zQKU/81DFX/NQxV/zUMVf81DFX/NhBXmon+pgBBMGAAbYaVADQKVAA3EVhZNQxV+zUM
        Vf81DFX/MwlT/1M9ff+kwun/qcrv/6nJ7/+pyu//q8zy/6zO8/+rzfP/mK3Z/4qXxv9UP3//Rypt/5Gj
        0P+fueL/hY/A/6G85f+NnMr/RSZq/zQLVP81DFX/NQxV/zUMVfs3EVhZNApUAG2GlgAAAAAAOhlbADsZ
        Wxo2DlbTNQxV/zUMVf81C1X/OhRc/4OLvP+rzPL/qcnv/6nJ7/+lw+r/dnes/4qWxv9hU4//Pxxi/zsW
        Xf9ycKb/rtD1/3t+sv83EFj/gYm6/63Q9f9qY5z/MwlT/zUMVf81DFX/Ng5W0zoZWxo6GVsAAAAAAAAA
        AAA6FVgAMwhWADYQVnk1DFX+NQxV/zUMVf80ClT/RSZq/4aQwP+nxez/q83y/6XC6v9dTYr/foO2/564
        4f+So9D/XU6L/040dv+asNv/m7Pd/3t/s/+euOH/kqPQ/0grbv80C1T/NQxV/zUMVf81DVV7MwdXADoV
        VwAAAAAAAAAAAAAAAAA3ElcAORdYGTYOVsg1DFX/NQxV/zUMVf80C1T/OxZd/1pJh/92d6z/hIy+/4GH
        uv+EjL7/hY/A/2xlnv8+G2H/NApT/1I7e/+asdz/rtD1/5Kj0P9JLXD/NApT/zUMVf81DFX/NQ1VyDcT
        Vxo3ElYAAAAAAAAAAAAAAAAAAAAAADQPUwA1C1UANhBWSDUNVeo1DFX/NQxV/zUMVf81C1T/MwlT/zQL
        VP82Dlf/OBBZ/zcPWP82Dlf/NApT/zQLVP81DFX/NAtU/042d/9vaqL/SSxv/zQKU/81DFX/NQxV/zUN
        Veo2EFZINQtVADQPUwAAAAAAAAAAAAAAAAAAAAAAAAAAADUOVQAxBFEBORhZYjYPVu81DFX/NQxV/zUM
        Vf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NApT/zQKU/80C1T/NQxV/zUM
        Vf82D1bvORlZYzIFUQE1DlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1MbABkh4EDORhZYjUN
        Veo1DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf81DFX/NQ1V6jkYWWJkh4IDTUxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUO
        VQA2ElYCNhBWRzUNVck1DFX9NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf81DFX/NQxV/TYNVck2EFZHNhNWAjUOVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEAsYAA0ClQAOBdYGTYQVng2DlbUNQxV+zUMVf81DFX/NQxV/zUMVf81DFX/NQxV/zUM
        Vf81DFX/NQxV+zYOVtQ2EFZ4OBdYGTQKVABALGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4GFcAOh5XAToYWxk3EVhZNxFXmDYPVsU2DVbcNg1W4zYN
        VuM2DVbcNg9WxTcRV5g3EVhZOhhbGToeWAE4GFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEYwZQBNNmoBPR5eDDgU
        WBs6E10hOhNdITgUWBs9Hl4MTTZqAUYwZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gB///gAH//gAAf/wAAD/4AAAf8AAAD/AAAA/gAAAHwAAAA8AA
        AAPAAAADgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAPAAAADwAAAA+AAAAfgAAAH8AAAD/AA
        AA/4AAAf/AAAP/8AAP//gAH///AP//////8=
</value>
  </data>
</root>